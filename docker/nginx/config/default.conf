# pwp

# do not show server information:
server_tokens off;
# needs additional module: more_set_headers "Server: PWP-Appserver";

# use docker dns resolver:
resolver 127.0.0.11;

map $host $hostpart {
    default                    "";
    "~^(?<host_part>[^.]*)\..*$"  $host_part;
}

server {
    listen       80;
    server_name  *.wealthpilot.de;

    # ---------- url filter rules -----------
    include include/include_filter_rules_404.conf;

    location / {
        # redirect to https with fixed domain suffix of ".wealthpilot.de" (to avoid an open redirect attack via forged "host" header)
        return 301 https://$hostpart.wealthpilot.de$request_uri;
    }

    # for certbot challenges (renewal process)
    location ~ /.well-known/acme-challenge {
        allow all;
        root /data/letsencrypt;
    }

}
server {
    listen       443 ssl;
    server_name  *.wealthpilot.de;

    # set body size to 250MB for long reports and document upload/download
    client_max_body_size 265M;

    # ---------- buffering (request/response) ------------
    # we do not want data in responses to be written to disk (download docs, but others as well)
    proxy_max_temp_file_size 0;
    # we do not want to buffer request (documents):
    # no limit to max size possible, so we need to disable buffering for
    # requests at all
    proxy_request_buffering off;

    # ---------- SSL Config -----------

    ssl_certificate /etc/ssl/wealthpilot.de.bundle.crt;
    ssl_certificate_key /etc/ssl/wealthpilot.de.key;

    ssl_client_certificate /etc/ssl/ca_clients.crt;
    ssl_verify_client optional; # bzw optional_no_ca (nur weiterschicken

    # ssl config is mostly default:
    # from https://cipherli.st/
    # do not allow TSLv1.0 or 1.1 anymore - this only works on prod/rc, but NOT on dev (haproxy problem?) - so this is commented out on dev by jenkins task:
    ssl_protocols       TLSv1.2 TLSv1.3;
    # recommended from BSI TLS checklist:
    # according to https://testssl.sh/openssl-iana.mapping.html
    # TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = ECDHE-RSA-AES128-SHA256, considered weak by ssllabs, but MUST by BSI
    # TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = ECDHE-RSA-AES256-SHA384, considered weak by ssllabs, only RECOMMENDED by BSI (omitted)
    ssl_ciphers         TLS-AES-256-GCM-SHA384:TLS-AES-128-GCM-SHA256:TLS-AES-128-CCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256;

    # for perfect forward secrecy:
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/dh4096.pem;

    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    # OCSP stapling will not work on dev
    # (no Online Certficate Status Protocol url), but on rc and prod it should work
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    # resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
    resolver_timeout 5s;

    # ---------- security headers ----------

    # HSTS header is already added by the application? this would lead to duplicate:
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # nosniff already set by application, add nosniff header (https://www.owasp.org/index.php/List_of_useful_HTTP_headers)
    # add_header X-Content-Type-Options nosniff;

    # do not set referrers outside of our application (https://scotthelme.co.uk/a-new-security-header-referrer-policy/)
    add_header Referrer-Policy same-origin;

    # add policy header: (https://scotthelme.co.uk/content-security-policy-an-introduction/ https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy)
    add_header Feature-Policy "autoplay 'self'; camera 'none'; encrypted-media 'none'; fullscreen 'self'; geolocation 'none'; gyroscope 'none'; microphone 'none'; midi 'none'; payment 'none'; speaker 'none'; vr 'none';";

    # ---------- reverse proxy config -----------
    location / {
        # forward to upstream server:
        # (use variable to prevent host name resolution at startup
        # - prevents startup if app server not running)
        set $upstream http://pwp-application:8080;
        proxy_pass $upstream;
        proxy_http_version 1.1;

        # add client certificate headers (if available, prevents setting these headers from the client by an attacker)
        # DO NOT REMOVE THE X-SSL-CLIENT HEADERS as this allows an attacker to set the headers and circumvent the client certificate check of
        # organisations!
        proxy_set_header X-SSL-CLIENT-FINGERPRINT $ssl_client_fingerprint;
        proxy_set_header X-SSL-CLIENT-VERIFY $ssl_client_verify;

        proxy_set_header Connection "";
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Host      $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_connect_timeout       900;
        proxy_send_timeout          900;
        proxy_read_timeout          900;
        send_timeout                900;


        #root   /usr/share/nginx/html;
        #index  index.html index.htm;
    }

    # ---------- hardening -----------
    if ($request_method !~ ^(GET|PUT|POST|PATCH|DELETE|HEAD)$ ) {
        return 405;
    }

    # ---------- maintenance / error page -----------
    # show maintenance page when application cannot be reached:
    error_page 502 503 /maintenance.html;
    location = /maintenance.html {
        root   /usr/share/nginx/html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # ---------- url filter rules -----------
    include include/include_filter_rules_404.conf;

}
